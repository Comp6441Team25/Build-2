/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package first_page;

import static first_page.Symbols.as;
import static first_page.first_page.active_turn;
import static first_page.first_page.playerObj;
import java.util.Enumeration;
import javax.swing.AbstractButton;
import javax.swing.ButtonGroup;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JRadioButton;

/**
 *
 * @author n_bhaga
 */
public class actionSymbol extends javax.swing.JFrame {

    /**
     * Creates new form actionSymbol
     */
    public actionSymbol() {
        initComponents();
    }
    public  JLabel[] lb = new JLabel[12];
    public JRadioButton[] rb = new JRadioButton[12];
    public JPanel jp = new JPanel();
    ButtonGroup radioGroup = new ButtonGroup();
    public JButton jb;
     public String area1 = null;
     String from_area = null;
    String to_area = null;
    
    public  JLabel[] lb1 = new JLabel[12];
    public JRadioButton[] rb1 = new JRadioButton[12];
    public JPanel jp1 = new JPanel();
    ButtonGroup radioGroup1 = new ButtonGroup();
    public JButton jb1;

    public  JLabel[] lb2 = new JLabel[12];
    public JRadioButton[] rb2 = new JRadioButton[12];
    public JPanel jp2 = new JPanel();
    ButtonGroup radioGroup2 = new ButtonGroup();
    public JButton jb2;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        placeMinionButton = new javax.swing.JButton();
        placeBuildingButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        placeMinionButton.setText("Place Minion");
        placeMinionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                placeMinionButtonActionPerformed(evt);
            }
        });

        placeBuildingButton.setText("Place Building");
        placeBuildingButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                placeBuildingButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(247, 247, 247)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(placeBuildingButton)
                    .addComponent(placeMinionButton))
                .addContainerGap(643, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(446, Short.MAX_VALUE)
                .addComponent(placeBuildingButton)
                .addGap(33, 33, 33)
                .addComponent(placeMinionButton)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void placeMinionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_placeMinionButtonActionPerformed

    for (Enumeration<AbstractButton> buttons = as.radioGroup.getElements(); buttons.hasMoreElements();) {
            AbstractButton button = buttons.nextElement();
            if (button.isSelected()) {
                   area1 = button.getName();
            }
            }
            for(int i=0;i<12;i++){
            if(first_page.area[i].areaName == area1)
            {
                first_page.area[i].addMinion();
                System.out.println("area name:"+ first_page.area[i].areaName);
                first_page.playerObj[active_turn].minionAreaCount.add(first_page.area[i].areaName);
                System.out.println("minionarea count: " + first_page.playerObj[active_turn].minionAreaCount);
                System.out.println("red minion: "+ first_page.area[i].redMinion);
                System.out.println("green minion: "+ first_page.area[i].greenMinion);
                System.out.println("yellow minion: "+ first_page.area[i].yellowMinion);
                System.out.println("blue minion: "+ first_page.area[i].blueMinion);
            }
            }
            System.out.println("minions in hand:" + first_page.playerObj[first_page.active_turn].minionInHand);
            System.out.println("total areas in which player is having his minions:" + first_page.playerObj[active_turn].minionAreaCount );
            JOptionPane.showMessageDialog(as, "Minion has been moved successfully to " + area1, "Error", JOptionPane.WARNING_MESSAGE );
            as.setVisible(false);        
    }//GEN-LAST:event_placeMinionButtonActionPerformed

    private void placeBuildingButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_placeBuildingButtonActionPerformed

        for (Enumeration<AbstractButton> buttons = as.radioGroup.getElements(); buttons.hasMoreElements();) {
                AbstractButton button = buttons.nextElement();
                if (button.isSelected()) {
                        from_area = button.getName();
                    }
                }
                for (Enumeration<AbstractButton> buttons = as.radioGroup1.getElements(); buttons.hasMoreElements();) {
                AbstractButton button = buttons.nextElement();
                if (button.isSelected()) {
                        to_area = button.getName();
                    }
                }
                for(int i=0;i<12;i++){
                if(first_page.area[i].areaName == from_area){    
                        first_page.area[i].buildingPresent = null;
                        playerObj[active_turn].Property.remove(from_area);
                        playerObj[active_turn].cashInHand += first_page.area[i].buildCost;  // deducting cash from player's inventory
                        Bank.cash -= first_page.area[i].buildCost;  // adding building fund to bank
                        playerObj[active_turn].points -= first_page.area[i].buildCost;  // deducting points for removed building
                }
                else if(first_page.area[i].areaName == to_area)
                {   
                        first_page.area[i].buildingPresent = first_page.playerObj[first_page.active_turn].Color;
                        playerObj[active_turn].Property.add(to_area);
                        if(playerObj[active_turn].buildInHand !=0)
                            playerObj[active_turn].buildInHand--;
                        playerObj[active_turn].cashInHand -= first_page.area[i].buildCost;  // deducting cash from player's inventory
                        Bank.cash += first_page.area[i].buildCost;  // adding building fund to bank
                        playerObj[active_turn].points += first_page.area[i].buildCost;  // adding points for removed building
                }
                }

// TODO add your handling code here:
    }//GEN-LAST:event_placeBuildingButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(actionSymbol.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(actionSymbol.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(actionSymbol.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(actionSymbol.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new actionSymbol().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton placeBuildingButton;
    public javax.swing.JButton placeMinionButton;
    // End of variables declaration//GEN-END:variables
}
